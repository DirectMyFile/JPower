task allTestsReport(type: TestReport) {
    group = "reporting"
    description = "Generates a Test Report with all modules included"
    destinationDir = file("${buildDir}/tests/")
    for (prj in subprojects) {
         reportOn prj.tasks.getByName("test")
         dependsOn ":${prj.name}:test"
    }

    doLast {
        file("${buildDir}/tests/xml/").with {
            deleteDir()
            mkdirs()
        }
        fileTree(dir: "modules/", include: ["**/build/test-results/TEST-*.xml"]).each { file ->
            new File("${buildDir}/tests/xml/", file.name).bytes = file.bytes
        }
    }
}

task jpowerInfo {
    group = "reporting"
    description = "Generates JPower Information"
    doLast {
        def metadataDir = file("${buildDir}/metadata/")
        metadataDir.with { deleteDir() ; mkdirs() }
        def modulesFile = new File(metadataDir, "modules.json")
        def json = new groovy.json.JsonBuilder()
        json(subprojects.collect { prj -> [ name: prj.name, description: prj.description ] })
        modulesFile.write(json.toPrettyString() + '\n')
    }
}
