task allTestsReport(type: TestReport) {
    group = "reporting"
    description = "Generates a Test Report with all tests included."
    destinationDir = file("${buildDir}/tests/")

    doLast {
        file("${buildDir}/tests/xml/").with {
            deleteDir()
            mkdirs()
        }

        fileTree(dir: "modules/", include: ["**/build/test-results/TEST-*.xml"]).each { file ->
            new File("${buildDir}/tests/xml/", file.name).bytes = file.bytes
        }
    }
}

task allTests(group: "verification", description: "Runs All Tests.") {
    for (prj in subprojects) {
        def testTask = prj.tasks.getByName("test")
        finalizedBy(testTask)
        allTestsReport.reportOn(testTask)
    }
    
    finalizedBy(allTestsReport)
}

task jpowerInfo {
    group = "reporting"
    description = "Generates JPower Information"
    doLast {
        def metadataDir = file("${buildDir}/metadata/")
        metadataDir.with { deleteDir() ; mkdirs() }
        def modulesFile = new File(metadataDir, "modules.json")
        def json = new groovy.json.JsonBuilder()
        json(subprojects.collect { prj -> [ name: prj.name, description: prj.description ] })
        modulesFile.write(json.toPrettyString() + '\n')
    }
}

buildDashboard.aggregate htmlDependencyReport
buildDashboard.reports.html.destination = file("${buildDir}/dashboard/")
