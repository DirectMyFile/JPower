import jpower.gradle.JPower
import jpower.gradle.JarAllTask
import jpower.gradle.ReleaseTask

apply plugin: "build-dashboard"
apply plugin: "project-report"
apply plugin: "idea"
apply plugin: "eclipse"
apply plugin: "project-report"

group = "com.directmyfile.jpower"
version = getProperty("jpower.version")

subprojects {
    apply plugin: "java"

    version = rootProject.version

    JPower.setProject(project)
    JPower.setup()

    repositories {
        mavenCentral()

        maven {
            url 'https://oss.sonatype.org/content/repositories/snapshots/'
        }
    }

    dependencies {
        compile "org.jetbrains:annotations:13.0"
        testCompile "junit:junit:4.12-SNAPSHOT"
    }
    
    publish {
        shouldRunAfter "test"
    }

    compileJava {
        options.warnings = false
        options.compilerArgs << '-XDignore.symbol.file'
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
}

task jarAll(type: JarAllTask) {
    group = "build"
    description = "Builds a Jar with all JPower Modules"
}

task wrapper(type: Wrapper) {
    group = "build setup"
    description = "Builds/Updates the Gradle Wrapper"
    gradleVersion = "2.1-20140521220014+0000"
}

task release(type: ReleaseTask) {
    group = "publishing"
    description = "Releases JPower as configured"
    git(tag: true, push: true, updateMaster: true)
}

task javadocAll(type: Javadoc) {
    destinationDir = file("build/javadoc")
    source = (subprojects.sum { it.sourceSets.main.allJava })
    classpath = (subprojects.sum { it.configurations.compile })
    title = "JPower v${version}"
    options.with {
        links << "http://docs.oracle.com/javase/8/docs/api/"
    }
}

tasks.getByName("buildDashboard").with {
    group = "reporting"
    description = "Creates a project report site"
}

task ci {
    group = "build"
    description = "Exectes a Build for Continuous Integration"
    for (prj in subprojects) {
        dependsOn.addAll([ ":${prj.name}:test", ":${prj.name}:jar", ":${prj.name}:publish" ])
    }
    dependsOn.addAll([ "jarAll", "javadocAll" ])
}
